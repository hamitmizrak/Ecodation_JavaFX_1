package com.hamitmizrak.ecodation_javafx;

import com.hamitmizrak.ecodation_javafx.database.SingletonDBConnection;
import com.hamitmizrak.ecodation_javafx.utils.SpecialColor;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

// HelloApplication
public class HelloApplication extends Application {

    // Proje ayağa kalkarken olacaktır
    @Override
    public void start(Stage stage) throws IOException {

        // Veritabanın başlangıç değerleri ekle
        initializeDatabase();

        /*FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("view/hello-view.fxml"));
        Scene scene = new Scene(fxmlLoader.load(), 320, 240);
        stage.setTitle("Hello!");
        stage.setScene(scene);
        stage.show();*/

        System.out.println(getClass().getResource("view/login.fxml"));
        System.out.println(getClass().getResource("view/register.fxml"));
        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("view/login.fxml"));
        Parent root = fxmlLoader.load();
        stage.setTitle("Kullanıcı Yönetimi");
        stage.setScene(new Scene(root));
        stage.show();
    }

    // ########################################
    private void initializeDatabase() {
        try {
            // Oluşturduğumuz Database çağırmak
            Connection connection = SingletonDBConnection.getConnection();

            // Statement
            Statement statement = connection.createStatement();

            // Sql Query
            // CREATE TABLE
            String createTableSQL = """
                    -- Create User (user adında bir tablo oluştur)
                    CREATE TABLE  IF NOT EXISTS users (
                        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        username VARCHAR(100) NOT NULL UNIQUE,
                        password VARCHAR(255) NOT NULL,
                        email VARCHAR(100) NOT NULL UNIQUE
                    );
                    
                    -- Other Sql Table Create
                    """;
            // H2DB'ye bu tabloyu ekle
            statement.execute(createTableSQL);

            // DATA INSERT
            String insertDataSQL = """
                    MERGE INTO users (id, username, password, email)
                    KEY(id) VALUES (1,'Hamit','123456','hamitmizrak@gmail.com')
                    """;
            // H2DB'de users tablosuna kullanıcı ekle
            statement.execute(insertDataSQL);

            System.out.println(SpecialColor.BLUE+"Veritabanı başarıyla oluşturuldu ve veriler eklendi"+SpecialColor.RESET);
        } catch (SQLException sql) {
            System.out.println(SpecialColor.RED+"Veritabanı tablo veya insert eklenmedi"+SpecialColor.RESET);
            sql.printStackTrace();
            throw new RuntimeException(sql);
        } catch (Exception e) {
            System.out.println(SpecialColor.RED+"Veritabanı tablo veya insert eklenmedi"+SpecialColor.RESET);
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }

    // ########################################
    // PSVM
    public static void main(String[] args) {
        //launch();
        launch(args);
    } //end psvm
} //end HelloApplication